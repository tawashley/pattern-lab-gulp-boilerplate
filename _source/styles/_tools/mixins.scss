//Common Sass mixins

/* Mixin to drop micro clearfix into a selector.
*
* .simple-usage {
*   @include clearfix();
* }
*
* .detailed-usage {
*   @include clearfix(important);
* }
*/

@mixin clearfix($important: false) {

  // Determine whether or not to make declarations important.
  @if ($important == false) {
    $important: null;
  } @else {
    $important: !important;
  }

  &:after {
    content: "" $important;
    display: table $important;
    clear: both $important;
  }

}


// Custom Breakpoints
@mixin respond-to-max($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@mixin respond-to-min($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

@mixin respond-min-max($width--min, $width--max) {
  @media screen and (min-width: $width--min) and (max-width: $width--max) {
    @content;
  }
}

$old-ie-7: false !default;
$old-ie-8: false !default;

@mixin old-ie-7 {
  // Only use this content if we're dealing with old IE
  @if $old-ie-7 {
    @content;
  }
}
@mixin old-ie-8 {
  // Only use this content if we're dealing with old IE
  @if $old-ie-8 {
    @content;
  }
}

@mixin old-ie8-scaled-svg($d-px-target) {
  @if $old-ie-8 {
    font-size: 1rem;
    zoom: ($d-px-target/$d-px);
  }
}

// transition
@mixin transition {
  transition:all 0.3s ease;
  transform: translate3d(0, 0, 0);
  perspective: 1000;
  transform-style: preserve-3d;
  -webkit-backface-visibility: hidden;
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content;}
  :-moz-placeholder           {@content;}
  ::-moz-placeholder          {@content;}
  :-ms-input-placeholder      {@content;}
}

@mixin size ($width, $height: $width) {
  height: $height;
  width: $width;
}

@mixin reset-button {
  background: none;
  border: 0;
  padding: 0;
}
